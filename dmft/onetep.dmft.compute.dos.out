#!/bin/bash

rm scratchdir 2> /dev/null 

ngpu=`cat gpu_max`

if [ $ngpu -eq 0 ]
then
 echo " NO GPU "
 ngpu=1
fi

echo " "
echo " NUMBER OF PROCESSORS FOR DOS : " $ngpu
echo " MAKE SURE YOU SET THE RIGHT NUMBER OF PROCESSORS IN : input_onetep_dmft.txt "
echo " "

                                 cp input_onetep_dmft.txt     input_onetep_dmft.txt.backup
ls  input_onetep_dmft.txt.dos && cp input_onetep_dmft.txt.dos input_onetep_dmft.txt

mycase=`ls *.dat`
                   cp ${mycase} ${mycase}.backup
ls case.for.dos && cp case.for.dos ${mycase} 

for i in `seq 1 $ngpu`
 do 
  echo "changing mask_frequ file " $i
  mv mask_frequ${i} mask_frequ${i}_ > /dev/null 2>&1
 done

 update_case_file 'hubbard_proj_mixing ' 1.0
 update_case_file 'dmft_split '  F  
 update_case_file 'dmft_splitk ' F   
 update_case_file 'dmft_local_scratch ' F 
 update_case_file 'dmft_dos_min ' -10
 update_case_file 'dmft_dos_max '  10

 cp _store_last_iter/* .

 mkdir                   __last_iter_sigma_real_backup   > /dev/null 2>&1
 mkdir                   __last_iter_sigma_matsu_backup  > /dev/null 2>&1
 mv real_sigma_output*   __last_iter_sigma_real_backup   > /dev/null 2>&1
 mv sigma_output*        __last_iter_sigma_matsu_backup  > /dev/null 2>&1

 cp __last_iter_sigma_real_backup/* . 2> /dev/null  

 ls real_sigma_output* > /dev/null 2>&1 || echo "WARNING : THERE ARE NO SELF ENERGY FILES ON THE REAL AXIS !!!"
 ls real_sigma_output* > /dev/null 2>&1 || cp __last_iter_sigma_matsu_backup/* . 2> /dev/null
 ls real_sigma_output* > /dev/null 2>&1 || echo "USING FILES SIGMA_OUTPUT INSTEAD, HOPE THOSE ARE FOR REAL FREQU."

 for i in `ls real_sigma_output* 2> /dev/null 2>&1` ; do  j=`echo $i | sed 's/real_//g'` ; mv $i $j ; done;

 onetep.dmft just_onetep=.true. split_onetep=.true. nproc_onetep=$ngpu compute_dos=.true. dmft_splitkdmftall=.false.  

 for i in `ls sigma_output* 2> /dev/null 2>&1` ; do  j=`echo $i | sed 's/real_//g'` ; mv $i $j ; done;

 echo "NOW CLEANING ...."

 rm sigma_output* > /dev/null 2>&1
 cp  __last_iter_sigma_real_backup/real_sigma_output*  .  > /dev/null 2>&1
 cp  __last_iter_sigma_matsu_backup/sigma_output*      .  > /dev/null 2>&1

 ls _store_last_iter > /dev/null 2>&1  && rm store_* > /dev/null 2>&1
 
 for i in `seq 1 $ngpu`
 do
  echo "changing mask_frequ file " $i
  mv mask_frequ${i}_ mask_frequ${i} > /dev/null 2>&1
 done

 cp input_onetep_dmft.txt.backup  input_onetep_dmft.txt
 cp ${mycase}.backup ${mycase}

